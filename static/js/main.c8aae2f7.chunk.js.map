{"version":3,"sources":["Components/emailPopUp.js","Components/NavigationBar.js","Components/BodyPart.js","Components/popUpPart.js","App.js","serviceWorker.js","index.js"],"names":["emailPopUp","props","state","open","status","companyName","body","complete","handleClose","bind","handleOpen","this","setState","Fragment","onClick","Dialog","DialogTitle","color","fontsize","style","position","left","DialogContent","DialogContentText","Typography","variant","Grid","container","spacing","item","xs","TextField","value","autoFocus","margin","label","type","onChange","e","target","TextareaAutosize","rowsMin","placeholder","DialogActions","Button","window","userDetials","email","Component","theme","createMuiTheme","palette","primary","main","secondary","tertiary","quaternary","useStyles","makeStyles","root","flexGrow","background","fontSize","writings","alignContent","icons","size","NavigationBar","nameChecker","classes","undefined","userDetails","firstName","document","title","className","lastName","AppBar","Toolbar","cursor","url","twitterUrl","linkdinUrl","gitHubUrl","paddingTop","paddingLeft","paddingRight","pColor","backgroundColor","headings","listHolder","lists","BodyPart","Paper","contenteditable","Box","isValidEmailAddress","address","match","popUpPart","showDialog","handleDialogClose","fullWidth","id","required","items","Object","assign","onBlur","alignItems","disabled","AppC","useState","setDialog","changeUserDetails","newUserDetails","App","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8aae2f7.chunk.js","sourcesContent":["import React from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport { Grid, TextField, Typography } from '@material-ui/core'\nimport EmailIcon from '@material-ui/icons/Email'\nimport { Component } from 'react'\nimport HighlightOffSharpIcon from '@material-ui/icons/HighlightOffSharp';\n\n//Automatic send button lights after entering correct email \nclass emailPopUp extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             open : this.props.status,\n             companyName: '',\n             body : '',\n             complete: false,\n\n        }\n        this.handleClose = this.handleClose.bind(this)\n        this.handleOpen = this.handleOpen.bind(this)\n    }\n    handleClose(){\n        this.setState({\n            open : false\n        }\n        )\n    }\n    handleOpen(){\n        this.setState({\n            open : true\n        }\n        )\n    }\n    render() {\n        return(\n        <React.Fragment>\n            <EmailIcon onClick={this.handleOpen}/>\n            <Dialog open={this.state.open} >\n                <DialogTitle>\n                    Thank you.\n                    <HighlightOffSharpIcon color=\"error\" fontsize=\"large\" onClick={this.handleClose} style={{position:'absolute',left:'83%'}}/>\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <Typography variant=\"body1\">\n                        Thank you for showing interest in me. Please compose a message to send to me.\n                        </Typography>\n                    </DialogContentText>\n                    <Grid container spacing={1}>\n                    <Grid item xs={12}>\n                        <TextField value = {this.state.companyName} autoFocus margin='dense' label=\"Company Name\" type=\"text\" onChange={\n                            (e)=>{\n                                this.setState({\n                                    companyName : e.target.value\n                                })\n                            }\n                        }/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <br/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextareaAutosize rowsMin={5} placeholder=\"Edit this to type the body of the email.\" value ={this.state.body} onChange={\n                            (e)=>{\n                                this.setState({\n                                    body : e.target.value\n                                })\n                            }\n                        }/>\n                    </Grid>\n                    <br/>\n                    <Grid item xs={4}>\n                    </Grid>\n                    <DialogActions>\n                    <Grid item xs={1}>\n                        <Button variant=\"contained\" onClick={()=>{\n                        window.open(`mailto:${this.props.userDetials.email}?subject=Hiring you in ${this.state.companyName}&body=${this.state.body}`)\n                        this.handleClose()\n                    }}>Send</Button>\n                    </Grid>\n                    </DialogActions>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n        </React.Fragment>\n        )\n    }\n}\n\nexport default emailPopUp\n","import React from 'react'\nimport 'fontsource-roboto'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport { makeStyles} from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\nimport { Grid} from '@material-ui/core'\nimport FromEmailIcon from './emailPopUp'\n\n\n//Obtained from https://material-ui.com/customization/color/\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n          main: '#26a69a',\n        },\n        secondary: {\n          main: '#66bb6a',\n        },\n        tertiary:{\n          main: '#f7ebeb',\n        },\n        quaternary:{\n          main: '#eef593',\n        },\n    },\n  });\n\n  //Did not make the sides hidable as that woudl make the overall look bad in small phones\nconst useStyles = makeStyles(() => ({\n    root: {\n      flexGrow: 1,\n      background: theme.palette.primary.main,\n      fontSize: 'large',\n    },\n    writings:{\n        alignContent: 'center',\n    },\n    icons:{\n        size: \"inherit\",\n    }\n  }))\n\nfunction NavigationBar(props) {\n    const classes = useStyles()\n    let nameChecker\n    if (props.userDetails.firstName === undefined){\n        document.title= `Test's resume`\n        nameChecker = <Typography className={classes.writings} variant=\"h5\">Resume Builder</Typography>\n    }\n    else{\n        document.title= `${props.userDetails.firstName}/'s resume`\n        nameChecker = <Typography className={classes.writings} variant=\"h5\">{props.userDetails.firstName +' '+ props.userDetails.lastName}</Typography>\n    }\n    return (\n        <React.Fragment>\n            <AppBar className={classes.root}>\n                    <Toolbar>\n                        <Grid container spacing={0}>\n                            <Grid item xs={2}>\n                                <FromEmailIcon userDetials={props.userDetails} status={false}/>\n                            </Grid> \n                            <Grid item xs={7}>\n                                    {nameChecker}\n                            </Grid> \n                            <Grid item xs={3}>\n                                <Grid container spacing={4}>\n                                    <Grid item xs={1}>\n                                        <TwitterIcon cursor = 'pointer' className={classes.icons} onClick={()=>{\n                                            let url = `http://www.twitter.com/${props.userDetails.twitterUrl}`\n                                            window.open(url)\n                                        }}></TwitterIcon>\n                                    </Grid>\n                                    <Grid item xs={1}>\n                                        <LinkedInIcon cursor = 'pointer' className={classes.icons} onClick={()=>{\n                                            let url = `http://www.linkedin.com/${props.userDetails.linkdinUrl}`\n                                            window.open(url)\n                                        }}></LinkedInIcon>\n                                    </Grid>\n                                    <Grid item xs={1}>\n                                        <GitHubIcon cursor = 'pointer' className={classes.icons} onClick={()=>{\n                                            let url = `http://www.github.com/${props.userDetails.gitHubUrl}`\n                                            window.open(url)\n                                        }}></GitHubIcon>\n                                    </Grid>\n                                </Grid>\n                            </Grid> \n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default NavigationBar\n","import React,{Fragment} from 'react'\nimport { Grid, Paper, Typography, Box } from '@material-ui/core'\nimport { makeStyles} from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: '#26a69a',\n      },\n      secondary: {\n        main: '#66bb6a',\n      },\n      tertiary:{\n        main: '#f7ebeb',\n      },\n      quaternary:{\n        main: '#FFFFFF',\n      },\n    },\n  });\n\nconst useStyles = makeStyles(()=>({\n    root:{\n        paddingTop: '6em',\n        paddingLeft: '4em',\n        paddingRight: '4em',\n    },\n    pColor:{\n        backgroundColor: theme.palette.quaternary.main,\n    },\n    headings:{\n        paddingLeft: '3%',\n        color:'Navy',\n    },\n    listHolder:{\n        paddingLeft: '2em',   \n    },\n    lists:{\n        color:'Teal',\n    }\n}));\n\nfunction BodyPart() {\n    const classes = useStyles()\n    return (\n        <Fragment>\n            <Grid container spacing={0} className={classes.root}>\n                <Grid item xs={12}>\n                    <Paper className={classes.pColor}>\n                        <Typography className={classes.headings} variant=\"h5\">Education</Typography>\n                        <ul className={classes.listHolder}>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">[School Name]</Typography></li>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Degree</Typography></li>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Major</Typography></li>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">GPA</Typography></li>\n                        </ul>\n                    </Paper>\n                </Grid>\n                <Grid item xs = {12}>\n                    <Paper>\n                        <Typography className={classes.headings}  variant=\"h5\">Experience</Typography>\n                            <Box className={classes.pColor}>\n                                <ul className={classes.listHolder}>\n                                    <Typography contenteditable=\"true\" style={{color:'Red',}} variant=\"h6\">Company 1</Typography>\n                                    <Typography contenteditable=\"true\" style={{color:'Red',}} variant=\"h6\">Title</Typography>\n                                    <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Work Done</Typography></li>\n                                    <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Work Done</Typography></li>\n                                    </ul>\n                            </Box>\n                            <Box className={classes.pColor}>\n                                <Typography contenteditable=\"true\" style={{color:'Red',}} variant=\"h6\">Company 2</Typography>\n                                <Typography contenteditable=\"true\" style={{color:'Red',}} variant=\"h6\">[Title]</Typography>\n                                <ul className={classes.listHolder}>\n                                    <li contenteditable=\"true\"><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Work done</Typography></li>\n                                    <li contenteditable=\"true\"><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Work done</Typography></li>\n                                </ul>\n                            </Box>\n                    </Paper>        \n                </Grid>\n                <Grid item xs = {12}>\n                    <Paper className={classes.pColor}>\n                        <Typography className={classes.headings}  variant=\"h5\">Awards & Acknowledgements</Typography>\n                        <ul className={classes.listHolder}>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">First item</Typography></li>\n                            <li><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Second item</Typography></li>\n                        </ul>\n                    </Paper>\n                </Grid>\n                <Grid item xs = {12}>\n                    <Paper className={classes.pColor}>\n                        <Typography className={classes.headings} variant=\"h5\">Courses</Typography>\n                        <ul className={classes.listHolder}>\n                            <li contenteditable=\"true\"><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Course 1</Typography></li>\n                            <li contenteditable=\"true\"><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Course 2</Typography></li>\n                            <li contenteditable=\"true\"><Typography contenteditable=\"true\" className={classes.lists} variant=\"subtitle1\">Course 3</Typography></li>\n                        </ul>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Fragment>\n    )\n}\n\nexport default BodyPart\n","import React, { Component } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport Button from '@material-ui/core/Button'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport { Grid, TextField} from '@material-ui/core'\nimport TwitterIcon from '@material-ui/icons/Twitter'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport GitHubIcon from '@material-ui/icons/GitHub'\n\nfunction isValidEmailAddress(address) {\n    if(address === undefined){\n        return false;\n    }\n    return !! address.match(/.+@.+/);\n}\n\nclass popUpPart extends Component {\n   constructor(props) {\n       super(props)\n   \n       this.state = {\n        showDialog : this.props.showDialog,\n        complete : false,\n        userDetails: {\n            firstName : '',\n            lastName : '',\n            twitterUrl: '',\n            linkdinUrl: '',\n            gitHubUrl: '',\n            email: '',\n        }\n    }\n    this.handleDialogClose = this.handleDialogClose.bind(this)\n   }\n   \n    handleDialogClose(){\n        this.setState(\n            {\n                showDialog: false,\n            }\n        )\n        this.props.onChange(false,this.state.userDetails)\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dialog open={this.state.showDialog} fullWidth={true}>\n                <DialogTitle>\n                    Let's get to know you.\n                </DialogTitle>\n                <DialogContent>\n                <Grid container spacing ={1}>\n                    <Grid item xs={6}>\n                        <TextField id=\"firstName\" value = {this.state.userDetails.firstName} type=\"text\" required label=\"First Name\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"firstName\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                                })\n                        }\n                        }/>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField id=\"lastName\" value = {this.state.userDetails.lastName} type=\"text\" required label=\"Last Name\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"lastName\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                                })\n                        }\n                        } onBlur={() => this.setState({\n                            complete: isValidEmailAddress(this.state.email)})}/>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <TextField id=\"email\" value = {this.state.userDetails.email} type=\"email\" required label=\"Email\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"email\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                                })\n                        }\n                        } onBlur={() => this.setState({\n                            complete: isValidEmailAddress(this.state.userDetails.email)})} />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Grid container spacing={0} alignItems=\"flex-end\">\n                        <Grid item>\n                            <GitHubIcon />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"gitHubUrl\" value = {this.state.userDetails.gitHubUrl} type=\"text\" required label=\"Github\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"gitHubUrl\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                                })\n                            }\n                            }/>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <LinkedInIcon />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"linkdinUrl\" value = {this.state.userDetails.linkdinUrl} type=\"text\" required label=\"LinkedIn\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"linkdinUrl\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                            })\n                            }\n                            }/>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1} alignItems=\"flex-end\">\n                        <Grid item>\n                            <TwitterIcon />\n                        </Grid>\n                        <Grid item>\n                            <TextField id=\"twitterUrl\" value = {this.state.userDetails.twitterUrl} type=\"text\" required label=\"Twitter username\" onChange={\n                            (e)=>{\n                                var items = Object.assign({},this.state.userDetails,{\"twitterUrl\":`${e.target.value}`})\n                                this.setState({\n                                    userDetails : items\n                            })\n                            }\n                            }/>\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button disabled={!(this.state.complete)} variant=\"contained\" onClick={this.handleDialogClose}>Sumbit</Button>\n                    </Grid>\n                </Grid>\n                </DialogContent>\n                </Dialog>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default popUpPart\n","import React,{useState} from 'react';\nimport NavigationBar from './Components/NavigationBar'\nimport BodyPart from './Components/BodyPart'\nimport ShowDialog from './Components/popUpPart'\n//import { Button } from '@material-ui/core'\n// import ReactToPrint from 'react-to-print';\n\nimport './App.css';\n\nfunction AppC() {\n    const [showDialog, setDialog] = useState(true)\n    const [userDetails,changeUserDetails] = useState({'':''})\n    function handleChange(status, newUserDetails){\n      setDialog(status)\n      changeUserDetails(newUserDetails)\n    }\n\n  return (\n    <React.Fragment>\n      <ShowDialog showDialog={showDialog} onChange={handleChange}/>\n      <NavigationBar userDetails={userDetails}/>\n      <BodyPart/>\n    </React.Fragment>\n  );\n}\nfunction App(){\n  //const componentRef = React.useRef();\n  return(\n    <React.Fragment>\n      <AppC/>\n      {/* <ReactToPrint documentTitle=\"Test\" copyStyles={true} \n      trigger={() => <button>Print this out!</button>}\n      content={() => componentRef.current}\n      />\n      <ComponentToPrint ref={componentRef} /> */}\n    </React.Fragment>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}